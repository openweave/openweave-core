# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright (c) 2014-2017 Nest Labs, Inc.
#    All rights reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

#
#    Description:
#      This file is the GNU automake template for the Nest Weave
#      Cocoa Device Manager library.
#


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/device-manager/cocoa
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(am__libNLWeaveDeviceManager_a_HEADERS_DIST) \
	$(am__noinst_HEADERS_DIST)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_prog_lndir.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_with_package.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_compare_version.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_jni_include_dir.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_pthread.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/libtool.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltoptions.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltsugar.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltversion.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/lt~obsolete.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/pkg.m4 \
	$(top_srcdir)/build/autoconf/m4/nl_check_project_config_includes.m4 \
	$(top_srcdir)/build/autoconf/m4/nl_enable_long_tests.m4 \
	$(top_srcdir)/build/autoconf/m4/nl_with_lwip.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/include/BuildConfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libNLWeaveDeviceManager_adir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libNLWeaveDeviceManager_a_AR = $(AR) $(ARFLAGS)
libNLWeaveDeviceManager_a_LIBADD =
am__libNLWeaveDeviceManager_a_SOURCES_DIST = Base64Encoding.mm \
	NLIdentifyDeviceCriteria.mm NLNetworkInfo.mm \
	NLPairingCodeUtils.mm NLProfileStatusError.mm NLServiceInfo.mm \
	NLWeaveDeviceDescriptor.mm NLWeaveDeviceManager.mm \
	NLWeaveError.mm NLWeaveLogging.mm NLWeaveBleDelegate.mm \
	NLWeaveStack.mm NLWeaveConstants.mm \
	NLNevisPairingCodeDecoding.mm NLWeaveKeyIds.mm NLHKDF.mm \
	NLWeavePasscodeEncryptionSupport.mm NLWeaveKeyExportClient.mm \
	NLWeaveKeyExportSupport.mm
@WEAVE_WITH_COCOA_TRUE@am_libNLWeaveDeviceManager_a_OBJECTS = libNLWeaveDeviceManager_a-Base64Encoding.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLNetworkInfo.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLPairingCodeUtils.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLProfileStatusError.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLServiceInfo.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveDeviceManager.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveError.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveLogging.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveBleDelegate.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveStack.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveConstants.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveKeyIds.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLHKDF.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.$(OBJEXT) \
@WEAVE_WITH_COCOA_TRUE@	libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.$(OBJEXT)
libNLWeaveDeviceManager_a_OBJECTS =  \
	$(am_libNLWeaveDeviceManager_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_@AM_V@)
am__v_OBJCXX_ = $(am__v_OBJCXX_@AM_DEFAULT_V@)
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_@AM_V@)
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_@AM_DEFAULT_V@)
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
SOURCES = $(libNLWeaveDeviceManager_a_SOURCES)
DIST_SOURCES = $(am__libNLWeaveDeviceManager_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__libNLWeaveDeviceManager_a_HEADERS_DIST = Base64Encoding.h \
	NLIdentifyDeviceCriteria.h NLLogging.h NLNetworkInfo.h \
	NLPairingCodeUtils.h NLProfileStatusError.h NLServiceInfo.h \
	NLWeaveASN1ErrorCodes.h NLWeaveDeviceDescriptor.h \
	NLWeaveDeviceManager.h NLWeaveDeviceManagerTypes.h \
	NLWeaveErrorCodes.h NLWeaveError.h NLWeaveInetErrorCodes.h \
	NLWeaveBleDelegate.h NLWeaveStack.h NLWeaveConstants.h \
	NLNevisPairingCodeDecoding.h NLWeaveKeyIds.h NLHKDF.h \
	NLWeavePasscodeEncryptionSupport.h NLWeaveKeyExportClient.h \
	NLWeaveKeyExportSupport.h
am__noinst_HEADERS_DIST = NLIdentifyDeviceCriteria_Protected.h \
	NLNetworkInfo_Protected.h NLWeaveDeviceDescriptor_Protected.h \
	NLWeaveError_Protected.h NLWeaveDeviceManager_Protected.h
HEADERS = $(libNLWeaveDeviceManager_a_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLUEZ_BUILD_DIRECTORY = @BLUEZ_BUILD_DIRECTORY@
BLUEZ_CPPFLAGS = @BLUEZ_CPPFLAGS@
BLUEZ_LDFLAGS = @BLUEZ_LDFLAGS@
BLUEZ_LIBS = @BLUEZ_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CMP = @CMP@
CONFIG_DEVICE_LAYER = @CONFIG_DEVICE_LAYER@
CONFIG_HAVE_HEAP = @CONFIG_HAVE_HEAP@
CONFIG_HAVE_VCBPRINTF = @CONFIG_HAVE_VCBPRINTF@
CONFIG_HAVE_VSNPRINTF_EX = @CONFIG_HAVE_VSNPRINTF_EX@
CONFIG_NETWORK_LAYER_BLE = @CONFIG_NETWORK_LAYER_BLE@
CONFIG_NETWORK_LAYER_INET = @CONFIG_NETWORK_LAYER_INET@
CONFIG_TARGET_NETWORKS = @CONFIG_TARGET_NETWORKS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CROSS_SDK = @CROSS_SDK@
CROSS_SYSROOT = @CROSS_SYSROOT@
CROSS_TOP = @CROSS_TOP@
CURL_CPPFLAGS = @CURL_CPPFLAGS@
CURL_LDFLAGS = @CURL_LDFLAGS@
CURL_LIBS = @CURL_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
HAPPY_DNS = @HAPPY_DNS@
HAPPY_PATH = @HAPPY_PATH@
HAPPY_SERVICE = @HAPPY_SERVICE@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_IN6_RTMSG = @HAVE_IN6_RTMSG@
HAVE_LINUX_IF_TUN_H = @HAVE_LINUX_IF_TUN_H@
HAVE_LINUX_IPV6_ROUTE_H = @HAVE_LINUX_IPV6_ROUTE_H@
HAVE_LINUX_ROUTE_H = @HAVE_LINUX_ROUTE_H@
INET_ENDPOINTS = @INET_ENDPOINTS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVA_HOME = @JAVA_HOME@
JNI_CPPFLAGS = @JNI_CPPFLAGS@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBWEAVE_VERSION_AGE = @LIBWEAVE_VERSION_AGE@
LIBWEAVE_VERSION_CURRENT = @LIBWEAVE_VERSION_CURRENT@
LIBWEAVE_VERSION_INFO = @LIBWEAVE_VERSION_INFO@
LIBWEAVE_VERSION_REVISION = @LIBWEAVE_VERSION_REVISION@
LIPO = @LIPO@
LNDIR = @LNDIR@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LWIP_CPPFLAGS = @LWIP_CPPFLAGS@
LWIP_LDFLAGS = @LWIP_LDFLAGS@
LWIP_LIBS = @LWIP_LIBS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NLASSERT_CPPFLAGS = @NLASSERT_CPPFLAGS@
NLASSERT_LDFLAGS = @NLASSERT_LDFLAGS@
NLASSERT_LIBS = @NLASSERT_LIBS@
NLFAULTINJECTION_CPPFLAGS = @NLFAULTINJECTION_CPPFLAGS@
NLFAULTINJECTION_LDFLAGS = @NLFAULTINJECTION_LDFLAGS@
NLFAULTINJECTION_LIBS = @NLFAULTINJECTION_LIBS@
NLIO_CPPFLAGS = @NLIO_CPPFLAGS@
NLIO_LDFLAGS = @NLIO_LDFLAGS@
NLIO_LIBS = @NLIO_LIBS@
NLUNITTEST_CPPFLAGS = @NLUNITTEST_CPPFLAGS@
NLUNITTEST_LDFLAGS = @NLUNITTEST_LDFLAGS@
NLUNITTEST_LIBS = @NLUNITTEST_LIBS@
NL_PROJECT_CONFIG_INCLUDES = @NL_PROJECT_CONFIG_INCLUDES@
NM = @NM@
NMEDIT = @NMEDIT@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJCOPY = @OBJCOPY@
OBJCXX = @OBJCXX@
OBJCXXCPP = @OBJCXXCPP@
OBJCXXDEPMODE = @OBJCXXDEPMODE@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PRETTY_CHECK = @PRETTY_CHECK@
PRETTY_CHECK_ARGS = @PRETTY_CHECK_ARGS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKETS_CPPFLAGS = @SOCKETS_CPPFLAGS@
SOCKETS_LDFLAGS = @SOCKETS_LDFLAGS@
SOCKETS_LIBS = @SOCKETS_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
VISIBILITY_CFLAGS = @VISIBILITY_CFLAGS@
VISIBILITY_CXXFLAGS = @VISIBILITY_CXXFLAGS@
VISIBILITY_OBJCFLAGS = @VISIBILITY_OBJCFLAGS@
VISIBILITY_OBJCXXCFLAGS = @VISIBILITY_OBJCXXCFLAGS@
WEAVE_DEVICE_LAYER_TARGET = @WEAVE_DEVICE_LAYER_TARGET@
WEAVE_DEVICE_LAYER_TARGET_ESP32 = @WEAVE_DEVICE_LAYER_TARGET_ESP32@
WEAVE_LOGGING_STYLE = @WEAVE_LOGGING_STYLE@
WEAVE_LOGGING_STYLE_ANDROID = @WEAVE_LOGGING_STYLE_ANDROID@
WEAVE_LOGGING_STYLE_EXTERNAL = @WEAVE_LOGGING_STYLE_EXTERNAL@
WEAVE_LOGGING_STYLE_STDIO = @WEAVE_LOGGING_STYLE_STDIO@
WEAVE_LOGGING_STYLE_STDIO_WEAK = @WEAVE_LOGGING_STYLE_STDIO_WEAK@
WEAVE_OPENSSL_TARGET = @WEAVE_OPENSSL_TARGET@
WEAVE_OPENSSL_TARGET_DEFINES = @WEAVE_OPENSSL_TARGET_DEFINES@
WEAVE_SYSTEM_CONFIG_USE_LWIP = @WEAVE_SYSTEM_CONFIG_USE_LWIP@
WEAVE_SYSTEM_CONFIG_USE_SOCKETS = @WEAVE_SYSTEM_CONFIG_USE_SOCKETS@
WEAVE_TARGET_STYLE = @WEAVE_TARGET_STYLE@
WEAVE_TARGET_STYLE_EMBEDDED = @WEAVE_TARGET_STYLE_EMBEDDED@
WEAVE_TARGET_STYLE_UNIX = @WEAVE_TARGET_STYLE_UNIX@
_ACJNI_JAVAC = @_ACJNI_JAVAC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_OBJC = @ac_ct_OBJC@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
openssl_buildstem = @openssl_buildstem@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = \
    NLWeaveBleDelegate_Protected.h         \
    $(NULL)

@WEAVE_WITH_COCOA_TRUE@lib_LIBRARIES = libNLWeaveDeviceManager.a
@WEAVE_WITH_COCOA_TRUE@libNLWeaveDeviceManager_a_CPPFLAGS = \
@WEAVE_WITH_COCOA_TRUE@    -I$(top_srcdir)/src/device-manager     \
@WEAVE_WITH_COCOA_TRUE@    -I$(top_srcdir)/src/include            \
@WEAVE_WITH_COCOA_TRUE@    $(LWIP_CPPFLAGS)                       \
@WEAVE_WITH_COCOA_TRUE@    $(SOCKETS_CPPFLAGS)                    \
@WEAVE_WITH_COCOA_TRUE@    $(NULL)

@WEAVE_WITH_COCOA_TRUE@libNLWeaveDeviceManager_adir = $(includedir)/NLWeaveDeviceManager
@WEAVE_WITH_COCOA_TRUE@libNLWeaveDeviceManager_a_HEADERS = \
@WEAVE_WITH_COCOA_TRUE@    Base64Encoding.h                       \
@WEAVE_WITH_COCOA_TRUE@    NLIdentifyDeviceCriteria.h             \
@WEAVE_WITH_COCOA_TRUE@    NLLogging.h                            \
@WEAVE_WITH_COCOA_TRUE@    NLNetworkInfo.h                        \
@WEAVE_WITH_COCOA_TRUE@    NLPairingCodeUtils.h                   \
@WEAVE_WITH_COCOA_TRUE@    NLProfileStatusError.h                 \
@WEAVE_WITH_COCOA_TRUE@    NLServiceInfo.h                        \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveASN1ErrorCodes.h                \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceDescriptor.h              \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceManager.h                 \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceManagerTypes.h            \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveErrorCodes.h                    \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveError.h                         \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveInetErrorCodes.h                \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveBleDelegate.h                   \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveStack.h                         \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveConstants.h                     \
@WEAVE_WITH_COCOA_TRUE@    NLNevisPairingCodeDecoding.h           \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyIds.h                        \
@WEAVE_WITH_COCOA_TRUE@    NLHKDF.h                               \
@WEAVE_WITH_COCOA_TRUE@    NLWeavePasscodeEncryptionSupport.h     \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyExportClient.h               \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyExportSupport.h              \
@WEAVE_WITH_COCOA_TRUE@    $(NULL)

@WEAVE_WITH_COCOA_TRUE@noinst_HEADERS = \
@WEAVE_WITH_COCOA_TRUE@    NLIdentifyDeviceCriteria_Protected.h   \
@WEAVE_WITH_COCOA_TRUE@    NLNetworkInfo_Protected.h              \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceDescriptor_Protected.h    \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveError_Protected.h               \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceManager_Protected.h       \
@WEAVE_WITH_COCOA_TRUE@    $(NULL)

@WEAVE_WITH_COCOA_TRUE@libNLWeaveDeviceManager_a_SOURCES = \
@WEAVE_WITH_COCOA_TRUE@    Base64Encoding.mm                      \
@WEAVE_WITH_COCOA_TRUE@    NLIdentifyDeviceCriteria.mm            \
@WEAVE_WITH_COCOA_TRUE@    NLNetworkInfo.mm                       \
@WEAVE_WITH_COCOA_TRUE@    NLPairingCodeUtils.mm                  \
@WEAVE_WITH_COCOA_TRUE@    NLProfileStatusError.mm                \
@WEAVE_WITH_COCOA_TRUE@    NLServiceInfo.mm                       \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceDescriptor.mm             \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveDeviceManager.mm                \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveError.mm                        \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveLogging.mm                      \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveBleDelegate.mm                  \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveStack.mm                        \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveConstants.mm                    \
@WEAVE_WITH_COCOA_TRUE@    NLNevisPairingCodeDecoding.mm          \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyIds.mm                       \
@WEAVE_WITH_COCOA_TRUE@    NLHKDF.mm                              \
@WEAVE_WITH_COCOA_TRUE@    NLWeavePasscodeEncryptionSupport.mm    \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyExportClient.mm              \
@WEAVE_WITH_COCOA_TRUE@    NLWeaveKeyExportSupport.mm             \
@WEAVE_WITH_COCOA_TRUE@    $(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .lo .mm .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/device-manager/cocoa/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/device-manager/cocoa/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libNLWeaveDeviceManager.a: $(libNLWeaveDeviceManager_a_OBJECTS) $(libNLWeaveDeviceManager_a_DEPENDENCIES) $(EXTRA_libNLWeaveDeviceManager_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libNLWeaveDeviceManager.a
	$(AM_V_AR)$(libNLWeaveDeviceManager_a_AR) libNLWeaveDeviceManager.a $(libNLWeaveDeviceManager_a_OBJECTS) $(libNLWeaveDeviceManager_a_LIBADD)
	$(AM_V_at)$(RANLIB) libNLWeaveDeviceManager.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Po@am__quote@

.mm.o:
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepOBJCXX_TRUE@	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepOBJCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepOBJCXX_TRUE@	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepOBJCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepOBJCXX_TRUE@	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepOBJCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(LTOBJCXXCOMPILE) -c -o $@ $<

libNLWeaveDeviceManager_a-Base64Encoding.o: Base64Encoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-Base64Encoding.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Tpo -c -o libNLWeaveDeviceManager_a-Base64Encoding.o `test -f 'Base64Encoding.mm' || echo '$(srcdir)/'`Base64Encoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='Base64Encoding.mm' object='libNLWeaveDeviceManager_a-Base64Encoding.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-Base64Encoding.o `test -f 'Base64Encoding.mm' || echo '$(srcdir)/'`Base64Encoding.mm

libNLWeaveDeviceManager_a-Base64Encoding.obj: Base64Encoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-Base64Encoding.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Tpo -c -o libNLWeaveDeviceManager_a-Base64Encoding.obj `if test -f 'Base64Encoding.mm'; then $(CYGPATH_W) 'Base64Encoding.mm'; else $(CYGPATH_W) '$(srcdir)/Base64Encoding.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-Base64Encoding.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='Base64Encoding.mm' object='libNLWeaveDeviceManager_a-Base64Encoding.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-Base64Encoding.obj `if test -f 'Base64Encoding.mm'; then $(CYGPATH_W) 'Base64Encoding.mm'; else $(CYGPATH_W) '$(srcdir)/Base64Encoding.mm'; fi`

libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.o: NLIdentifyDeviceCriteria.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Tpo -c -o libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.o `test -f 'NLIdentifyDeviceCriteria.mm' || echo '$(srcdir)/'`NLIdentifyDeviceCriteria.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLIdentifyDeviceCriteria.mm' object='libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.o `test -f 'NLIdentifyDeviceCriteria.mm' || echo '$(srcdir)/'`NLIdentifyDeviceCriteria.mm

libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.obj: NLIdentifyDeviceCriteria.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Tpo -c -o libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.obj `if test -f 'NLIdentifyDeviceCriteria.mm'; then $(CYGPATH_W) 'NLIdentifyDeviceCriteria.mm'; else $(CYGPATH_W) '$(srcdir)/NLIdentifyDeviceCriteria.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLIdentifyDeviceCriteria.mm' object='libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLIdentifyDeviceCriteria.obj `if test -f 'NLIdentifyDeviceCriteria.mm'; then $(CYGPATH_W) 'NLIdentifyDeviceCriteria.mm'; else $(CYGPATH_W) '$(srcdir)/NLIdentifyDeviceCriteria.mm'; fi`

libNLWeaveDeviceManager_a-NLNetworkInfo.o: NLNetworkInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLNetworkInfo.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Tpo -c -o libNLWeaveDeviceManager_a-NLNetworkInfo.o `test -f 'NLNetworkInfo.mm' || echo '$(srcdir)/'`NLNetworkInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLNetworkInfo.mm' object='libNLWeaveDeviceManager_a-NLNetworkInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLNetworkInfo.o `test -f 'NLNetworkInfo.mm' || echo '$(srcdir)/'`NLNetworkInfo.mm

libNLWeaveDeviceManager_a-NLNetworkInfo.obj: NLNetworkInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLNetworkInfo.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Tpo -c -o libNLWeaveDeviceManager_a-NLNetworkInfo.obj `if test -f 'NLNetworkInfo.mm'; then $(CYGPATH_W) 'NLNetworkInfo.mm'; else $(CYGPATH_W) '$(srcdir)/NLNetworkInfo.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLNetworkInfo.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLNetworkInfo.mm' object='libNLWeaveDeviceManager_a-NLNetworkInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLNetworkInfo.obj `if test -f 'NLNetworkInfo.mm'; then $(CYGPATH_W) 'NLNetworkInfo.mm'; else $(CYGPATH_W) '$(srcdir)/NLNetworkInfo.mm'; fi`

libNLWeaveDeviceManager_a-NLPairingCodeUtils.o: NLPairingCodeUtils.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLPairingCodeUtils.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Tpo -c -o libNLWeaveDeviceManager_a-NLPairingCodeUtils.o `test -f 'NLPairingCodeUtils.mm' || echo '$(srcdir)/'`NLPairingCodeUtils.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLPairingCodeUtils.mm' object='libNLWeaveDeviceManager_a-NLPairingCodeUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLPairingCodeUtils.o `test -f 'NLPairingCodeUtils.mm' || echo '$(srcdir)/'`NLPairingCodeUtils.mm

libNLWeaveDeviceManager_a-NLPairingCodeUtils.obj: NLPairingCodeUtils.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLPairingCodeUtils.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Tpo -c -o libNLWeaveDeviceManager_a-NLPairingCodeUtils.obj `if test -f 'NLPairingCodeUtils.mm'; then $(CYGPATH_W) 'NLPairingCodeUtils.mm'; else $(CYGPATH_W) '$(srcdir)/NLPairingCodeUtils.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLPairingCodeUtils.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLPairingCodeUtils.mm' object='libNLWeaveDeviceManager_a-NLPairingCodeUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLPairingCodeUtils.obj `if test -f 'NLPairingCodeUtils.mm'; then $(CYGPATH_W) 'NLPairingCodeUtils.mm'; else $(CYGPATH_W) '$(srcdir)/NLPairingCodeUtils.mm'; fi`

libNLWeaveDeviceManager_a-NLProfileStatusError.o: NLProfileStatusError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLProfileStatusError.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Tpo -c -o libNLWeaveDeviceManager_a-NLProfileStatusError.o `test -f 'NLProfileStatusError.mm' || echo '$(srcdir)/'`NLProfileStatusError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLProfileStatusError.mm' object='libNLWeaveDeviceManager_a-NLProfileStatusError.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLProfileStatusError.o `test -f 'NLProfileStatusError.mm' || echo '$(srcdir)/'`NLProfileStatusError.mm

libNLWeaveDeviceManager_a-NLProfileStatusError.obj: NLProfileStatusError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLProfileStatusError.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Tpo -c -o libNLWeaveDeviceManager_a-NLProfileStatusError.obj `if test -f 'NLProfileStatusError.mm'; then $(CYGPATH_W) 'NLProfileStatusError.mm'; else $(CYGPATH_W) '$(srcdir)/NLProfileStatusError.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLProfileStatusError.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLProfileStatusError.mm' object='libNLWeaveDeviceManager_a-NLProfileStatusError.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLProfileStatusError.obj `if test -f 'NLProfileStatusError.mm'; then $(CYGPATH_W) 'NLProfileStatusError.mm'; else $(CYGPATH_W) '$(srcdir)/NLProfileStatusError.mm'; fi`

libNLWeaveDeviceManager_a-NLServiceInfo.o: NLServiceInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLServiceInfo.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Tpo -c -o libNLWeaveDeviceManager_a-NLServiceInfo.o `test -f 'NLServiceInfo.mm' || echo '$(srcdir)/'`NLServiceInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLServiceInfo.mm' object='libNLWeaveDeviceManager_a-NLServiceInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLServiceInfo.o `test -f 'NLServiceInfo.mm' || echo '$(srcdir)/'`NLServiceInfo.mm

libNLWeaveDeviceManager_a-NLServiceInfo.obj: NLServiceInfo.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLServiceInfo.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Tpo -c -o libNLWeaveDeviceManager_a-NLServiceInfo.obj `if test -f 'NLServiceInfo.mm'; then $(CYGPATH_W) 'NLServiceInfo.mm'; else $(CYGPATH_W) '$(srcdir)/NLServiceInfo.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLServiceInfo.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLServiceInfo.mm' object='libNLWeaveDeviceManager_a-NLServiceInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLServiceInfo.obj `if test -f 'NLServiceInfo.mm'; then $(CYGPATH_W) 'NLServiceInfo.mm'; else $(CYGPATH_W) '$(srcdir)/NLServiceInfo.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.o: NLWeaveDeviceDescriptor.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.o `test -f 'NLWeaveDeviceDescriptor.mm' || echo '$(srcdir)/'`NLWeaveDeviceDescriptor.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveDeviceDescriptor.mm' object='libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.o `test -f 'NLWeaveDeviceDescriptor.mm' || echo '$(srcdir)/'`NLWeaveDeviceDescriptor.mm

libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.obj: NLWeaveDeviceDescriptor.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.obj `if test -f 'NLWeaveDeviceDescriptor.mm'; then $(CYGPATH_W) 'NLWeaveDeviceDescriptor.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveDeviceDescriptor.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveDeviceDescriptor.mm' object='libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceDescriptor.obj `if test -f 'NLWeaveDeviceDescriptor.mm'; then $(CYGPATH_W) 'NLWeaveDeviceDescriptor.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveDeviceDescriptor.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveDeviceManager.o: NLWeaveDeviceManager.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveDeviceManager.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceManager.o `test -f 'NLWeaveDeviceManager.mm' || echo '$(srcdir)/'`NLWeaveDeviceManager.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveDeviceManager.mm' object='libNLWeaveDeviceManager_a-NLWeaveDeviceManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceManager.o `test -f 'NLWeaveDeviceManager.mm' || echo '$(srcdir)/'`NLWeaveDeviceManager.mm

libNLWeaveDeviceManager_a-NLWeaveDeviceManager.obj: NLWeaveDeviceManager.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveDeviceManager.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceManager.obj `if test -f 'NLWeaveDeviceManager.mm'; then $(CYGPATH_W) 'NLWeaveDeviceManager.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveDeviceManager.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveDeviceManager.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveDeviceManager.mm' object='libNLWeaveDeviceManager_a-NLWeaveDeviceManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveDeviceManager.obj `if test -f 'NLWeaveDeviceManager.mm'; then $(CYGPATH_W) 'NLWeaveDeviceManager.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveDeviceManager.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveError.o: NLWeaveError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveError.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveError.o `test -f 'NLWeaveError.mm' || echo '$(srcdir)/'`NLWeaveError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveError.mm' object='libNLWeaveDeviceManager_a-NLWeaveError.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveError.o `test -f 'NLWeaveError.mm' || echo '$(srcdir)/'`NLWeaveError.mm

libNLWeaveDeviceManager_a-NLWeaveError.obj: NLWeaveError.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveError.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveError.obj `if test -f 'NLWeaveError.mm'; then $(CYGPATH_W) 'NLWeaveError.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveError.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveError.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveError.mm' object='libNLWeaveDeviceManager_a-NLWeaveError.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveError.obj `if test -f 'NLWeaveError.mm'; then $(CYGPATH_W) 'NLWeaveError.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveError.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveLogging.o: NLWeaveLogging.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveLogging.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveLogging.o `test -f 'NLWeaveLogging.mm' || echo '$(srcdir)/'`NLWeaveLogging.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveLogging.mm' object='libNLWeaveDeviceManager_a-NLWeaveLogging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveLogging.o `test -f 'NLWeaveLogging.mm' || echo '$(srcdir)/'`NLWeaveLogging.mm

libNLWeaveDeviceManager_a-NLWeaveLogging.obj: NLWeaveLogging.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveLogging.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveLogging.obj `if test -f 'NLWeaveLogging.mm'; then $(CYGPATH_W) 'NLWeaveLogging.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveLogging.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveLogging.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveLogging.mm' object='libNLWeaveDeviceManager_a-NLWeaveLogging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveLogging.obj `if test -f 'NLWeaveLogging.mm'; then $(CYGPATH_W) 'NLWeaveLogging.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveLogging.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveBleDelegate.o: NLWeaveBleDelegate.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveBleDelegate.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveBleDelegate.o `test -f 'NLWeaveBleDelegate.mm' || echo '$(srcdir)/'`NLWeaveBleDelegate.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveBleDelegate.mm' object='libNLWeaveDeviceManager_a-NLWeaveBleDelegate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveBleDelegate.o `test -f 'NLWeaveBleDelegate.mm' || echo '$(srcdir)/'`NLWeaveBleDelegate.mm

libNLWeaveDeviceManager_a-NLWeaveBleDelegate.obj: NLWeaveBleDelegate.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveBleDelegate.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveBleDelegate.obj `if test -f 'NLWeaveBleDelegate.mm'; then $(CYGPATH_W) 'NLWeaveBleDelegate.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveBleDelegate.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveBleDelegate.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveBleDelegate.mm' object='libNLWeaveDeviceManager_a-NLWeaveBleDelegate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveBleDelegate.obj `if test -f 'NLWeaveBleDelegate.mm'; then $(CYGPATH_W) 'NLWeaveBleDelegate.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveBleDelegate.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveStack.o: NLWeaveStack.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveStack.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveStack.o `test -f 'NLWeaveStack.mm' || echo '$(srcdir)/'`NLWeaveStack.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveStack.mm' object='libNLWeaveDeviceManager_a-NLWeaveStack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveStack.o `test -f 'NLWeaveStack.mm' || echo '$(srcdir)/'`NLWeaveStack.mm

libNLWeaveDeviceManager_a-NLWeaveStack.obj: NLWeaveStack.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveStack.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveStack.obj `if test -f 'NLWeaveStack.mm'; then $(CYGPATH_W) 'NLWeaveStack.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveStack.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveStack.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveStack.mm' object='libNLWeaveDeviceManager_a-NLWeaveStack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveStack.obj `if test -f 'NLWeaveStack.mm'; then $(CYGPATH_W) 'NLWeaveStack.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveStack.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveConstants.o: NLWeaveConstants.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveConstants.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveConstants.o `test -f 'NLWeaveConstants.mm' || echo '$(srcdir)/'`NLWeaveConstants.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveConstants.mm' object='libNLWeaveDeviceManager_a-NLWeaveConstants.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveConstants.o `test -f 'NLWeaveConstants.mm' || echo '$(srcdir)/'`NLWeaveConstants.mm

libNLWeaveDeviceManager_a-NLWeaveConstants.obj: NLWeaveConstants.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveConstants.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveConstants.obj `if test -f 'NLWeaveConstants.mm'; then $(CYGPATH_W) 'NLWeaveConstants.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveConstants.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveConstants.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveConstants.mm' object='libNLWeaveDeviceManager_a-NLWeaveConstants.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveConstants.obj `if test -f 'NLWeaveConstants.mm'; then $(CYGPATH_W) 'NLWeaveConstants.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveConstants.mm'; fi`

libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.o: NLNevisPairingCodeDecoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Tpo -c -o libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.o `test -f 'NLNevisPairingCodeDecoding.mm' || echo '$(srcdir)/'`NLNevisPairingCodeDecoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLNevisPairingCodeDecoding.mm' object='libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.o `test -f 'NLNevisPairingCodeDecoding.mm' || echo '$(srcdir)/'`NLNevisPairingCodeDecoding.mm

libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.obj: NLNevisPairingCodeDecoding.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Tpo -c -o libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.obj `if test -f 'NLNevisPairingCodeDecoding.mm'; then $(CYGPATH_W) 'NLNevisPairingCodeDecoding.mm'; else $(CYGPATH_W) '$(srcdir)/NLNevisPairingCodeDecoding.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLNevisPairingCodeDecoding.mm' object='libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLNevisPairingCodeDecoding.obj `if test -f 'NLNevisPairingCodeDecoding.mm'; then $(CYGPATH_W) 'NLNevisPairingCodeDecoding.mm'; else $(CYGPATH_W) '$(srcdir)/NLNevisPairingCodeDecoding.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveKeyIds.o: NLWeaveKeyIds.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyIds.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyIds.o `test -f 'NLWeaveKeyIds.mm' || echo '$(srcdir)/'`NLWeaveKeyIds.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyIds.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyIds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyIds.o `test -f 'NLWeaveKeyIds.mm' || echo '$(srcdir)/'`NLWeaveKeyIds.mm

libNLWeaveDeviceManager_a-NLWeaveKeyIds.obj: NLWeaveKeyIds.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyIds.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyIds.obj `if test -f 'NLWeaveKeyIds.mm'; then $(CYGPATH_W) 'NLWeaveKeyIds.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyIds.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyIds.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyIds.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyIds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyIds.obj `if test -f 'NLWeaveKeyIds.mm'; then $(CYGPATH_W) 'NLWeaveKeyIds.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyIds.mm'; fi`

libNLWeaveDeviceManager_a-NLHKDF.o: NLHKDF.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLHKDF.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Tpo -c -o libNLWeaveDeviceManager_a-NLHKDF.o `test -f 'NLHKDF.mm' || echo '$(srcdir)/'`NLHKDF.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLHKDF.mm' object='libNLWeaveDeviceManager_a-NLHKDF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLHKDF.o `test -f 'NLHKDF.mm' || echo '$(srcdir)/'`NLHKDF.mm

libNLWeaveDeviceManager_a-NLHKDF.obj: NLHKDF.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLHKDF.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Tpo -c -o libNLWeaveDeviceManager_a-NLHKDF.obj `if test -f 'NLHKDF.mm'; then $(CYGPATH_W) 'NLHKDF.mm'; else $(CYGPATH_W) '$(srcdir)/NLHKDF.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLHKDF.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLHKDF.mm' object='libNLWeaveDeviceManager_a-NLHKDF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLHKDF.obj `if test -f 'NLHKDF.mm'; then $(CYGPATH_W) 'NLHKDF.mm'; else $(CYGPATH_W) '$(srcdir)/NLHKDF.mm'; fi`

libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.o: NLWeavePasscodeEncryptionSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Tpo -c -o libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.o `test -f 'NLWeavePasscodeEncryptionSupport.mm' || echo '$(srcdir)/'`NLWeavePasscodeEncryptionSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeavePasscodeEncryptionSupport.mm' object='libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.o `test -f 'NLWeavePasscodeEncryptionSupport.mm' || echo '$(srcdir)/'`NLWeavePasscodeEncryptionSupport.mm

libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.obj: NLWeavePasscodeEncryptionSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Tpo -c -o libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.obj `if test -f 'NLWeavePasscodeEncryptionSupport.mm'; then $(CYGPATH_W) 'NLWeavePasscodeEncryptionSupport.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeavePasscodeEncryptionSupport.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeavePasscodeEncryptionSupport.mm' object='libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeavePasscodeEncryptionSupport.obj `if test -f 'NLWeavePasscodeEncryptionSupport.mm'; then $(CYGPATH_W) 'NLWeavePasscodeEncryptionSupport.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeavePasscodeEncryptionSupport.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.o: NLWeaveKeyExportClient.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.o `test -f 'NLWeaveKeyExportClient.mm' || echo '$(srcdir)/'`NLWeaveKeyExportClient.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyExportClient.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.o `test -f 'NLWeaveKeyExportClient.mm' || echo '$(srcdir)/'`NLWeaveKeyExportClient.mm

libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.obj: NLWeaveKeyExportClient.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.obj `if test -f 'NLWeaveKeyExportClient.mm'; then $(CYGPATH_W) 'NLWeaveKeyExportClient.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyExportClient.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyExportClient.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportClient.obj `if test -f 'NLWeaveKeyExportClient.mm'; then $(CYGPATH_W) 'NLWeaveKeyExportClient.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyExportClient.mm'; fi`

libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.o: NLWeaveKeyExportSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.o -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.o `test -f 'NLWeaveKeyExportSupport.mm' || echo '$(srcdir)/'`NLWeaveKeyExportSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyExportSupport.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.o `test -f 'NLWeaveKeyExportSupport.mm' || echo '$(srcdir)/'`NLWeaveKeyExportSupport.mm

libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.obj: NLWeaveKeyExportSupport.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.obj -MD -MP -MF $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Tpo -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.obj `if test -f 'NLWeaveKeyExportSupport.mm'; then $(CYGPATH_W) 'NLWeaveKeyExportSupport.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyExportSupport.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Tpo $(DEPDIR)/libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='NLWeaveKeyExportSupport.mm' object='libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libNLWeaveDeviceManager_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libNLWeaveDeviceManager_a-NLWeaveKeyExportSupport.obj `if test -f 'NLWeaveKeyExportSupport.mm'; then $(CYGPATH_W) 'NLWeaveKeyExportSupport.mm'; else $(CYGPATH_W) '$(srcdir)/NLWeaveKeyExportSupport.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libNLWeaveDeviceManager_aHEADERS: $(libNLWeaveDeviceManager_a_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libNLWeaveDeviceManager_a_HEADERS)'; test -n "$(libNLWeaveDeviceManager_adir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libNLWeaveDeviceManager_adir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libNLWeaveDeviceManager_adir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libNLWeaveDeviceManager_adir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libNLWeaveDeviceManager_adir)" || exit $$?; \
	done

uninstall-libNLWeaveDeviceManager_aHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libNLWeaveDeviceManager_a_HEADERS)'; test -n "$(libNLWeaveDeviceManager_adir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libNLWeaveDeviceManager_adir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libNLWeaveDeviceManager_adir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libNLWeaveDeviceManager_aHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES \
	uninstall-libNLWeaveDeviceManager_aHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES \
	install-libNLWeaveDeviceManager_aHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLIBRARIES \
	uninstall-libNLWeaveDeviceManager_aHEADERS


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
